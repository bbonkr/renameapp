name: "Build and tag"

on:
  push:
    branches: 
      - "main"
    tags:
      - "!*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #[macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Node.js, Npm
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build:prod
      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - name: check git tag exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkGitTag
        with:
          tag: "v${{ env.PACKAGE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: check git tag
        uses: bbonkr/git-tag-check-action@v1
        id: gitTagCheck 
        with:
          TAG: "v${{ env.PACKAGE_VERSION }}"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Does not run because tag is exists
        run: |
          echo "TAG v${{ env.PACKAGE_VERSION }} is exists. (steps.gitTagCheck.outputs.exists=${{ steps.gitTagCheck.outputs.hasTag }})" 
        if: ${{ steps.checkGitTag.outputs.exists }}
      - name: package-version-to-git-tag
        uses: pkgdeps/git-tag-action@v2
        if: ${{ steps.checkGitTag.outputs.exists == false }}
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Release Drafter
        id: release_drafter
        # if: ${{ success() }}
        if: ${{ steps.checkGitTag.outputs.exists == false }}
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          version: ${{ env.PACKAGE_VERSION }}
          publish: true
          # prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Check Upload Url
        # if: ${{ success() }}
        if: ${{ steps.checkGitTag.outputs.exists == false }}
        run: echo ${{ steps.release_drafter.outputs.upload_url }}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        # if: ${{ success() }}
        if: ${{ steps.checkGitTag.outputs.exists == false }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: bbonkr/renameapp
          event-type: upload-assets
          client-payload: '{ "url": "${{ steps.release_drafter.outputs.upload_url }}" }'
